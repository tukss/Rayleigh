FFTWINC = /home3/feathern/FFTW3/include
FFTWLIB = /home3/feathern/FFTW3/lib
F90  = /usr/local/mpich2-1.0.7/bin/mpif90
F90 = mpif90
##F90 = mpif90 -f90=ifort
F90FLAGS = -r8 -O3 -fpp -FR -fp-model strict -I$(FFTWINC)

MKLPATH = /central/intel/mkl_10.1.0.015
INTERFACE = ${MKLPATH}/lib/em64t/libmkl_intel_lp64.a
COMP =  ${MKLPATH}/lib/em64t/libmkl_lapack.a
THREADING = ${MKLPATH}/lib/em64t/libmkl_intel_thread.a
RUNTIME = ${MKLPATH}/lib/em64t/libguide.a -lpthread
MKL_START = -L${MKLPATH}/lib/em64t -I${MKLPATH}/include -Wl, --start-group
MKL_END = -l -l -l -Wl, --end-group

#   Flags for the MKL libraries
LIBFLAGS = $(MKL_START) $(INTERFACE) $(THREADING) $(COMP) $(MKL_END) $(RUNTIME) -L/home3/feathern/FFTW3/lib/ -lfftw3 -lm -lc



$LIBFLAGS = -L/home3/feathern/FFTW3/lib/ -lfftw3 -lm -lc 
F90FLAGS = -r8 -O0 -CB -g -traceback -fpp -FR -I$(FFTWINC)
#F90FLAGS = -r8 -O3 -fpp -FR -ip -ipo -I$(FFTWINC)
##F90FLAGS = -r8 -O3 -fpp -FR -I$(FFTWINC)
##LIBFLAGS = -lmpi -lmpio
PROG =	pseudo

.SUFFIXES: .o .F90 .f .F
OBJ = Timing.o Finite_Difference.o Linear_Solve.o Structures.o Legendre_Polynomials.o Legendre_Transforms.o \
	Fourier_Transform.o Fourier_Derivatives.o MPI_Base.o \
	All_to_All.o MPI_LAYER.o Load_Balance.o Parallel_Framework.o \
	ProblemSize.o PseudoPhysics.o Input.o Main.o \

DSOBJ = Structures.o
PFOBJ = MPI_Base.o All_to_All.o SendReceive.o ISendReceive.o General_MPI.o MPI_LAYER.o Load_Balance.o Parallel_Framework.o
MOBJ  = Timing.o Finite_Difference.o Chebyshev_Polynomials.o Linear_Solve.o Legendre_Polynomials.o Legendre_Transforms.o \
	Fourier_Transform.o Spectral_Derivatives.o
IOOBJ = Spherical_IO.o
POBJ  = Controls.o ProblemSize.o Fields.o Initial_Conditions.o Diagnostics.o BoundaryConditions.o Checkpointing.o Physics.o
TOBJ  = Test_SHT.o Test_Cheby.o TestSuite.o
MAINOBJ = Input.o Main.o


$(PROG) :$(DSOBJ) $(PFOBJ) $(MOBJ) $(IOOBJ) $(POBJ) $(TOBJ) $(MAINOBJ)
	$(F90) $(F90FLAGS) -o  $(PROG) $(DSOBJ) $(PFOBJ) $(MOBJ) $(IOOBJ) $(POBJ) $(TOBJ) $(MAINOBJ) $(LIBFLAGS)
.F90.o :
	$(F90) $(F90FLAGS) -c $<
clean : 
	rm -f *.o *.mod pseudo
ready :
# Main.o : Parallel_Framework.o PseudoPhysics.o

