#!/bin/bash
###  RAYLEIGH BUILD SCRIPT
###  Usage:  ./build_rayleigh machine_name target
###  The Makefile employed is machine dependent
###  See the Makefiles directory for example Makefiles
###  The value of machine_name should correspond to one of the Makefiles
###  in that directory.  Machine name for Makefile is indicated following underscore.

###  For example, to use Makefile_LCD
###  ./build_rayleigh LCD

###  To use Makefile_Pleiades
###  ./build_rayleigh Pleiades

###  A debugging flag may be passed to makefiles that support it.
### ./build_rayleigh Pleiades debug  (for example)

#!/bin/bash

RAYLEIGHDIR=$PWD
PREFIX=$RAYLEIGHDIR/bin
MACHINE=NULL
TARGET=all
MACHINE_SPECIFIED=no
NEED_HELP=no
for option
do
    case $option in

    -help | --help | -h)
      NEED_HELP=yes ;;

    -prefix=* | --prefix=*)
      PREFIX=`expr "x$option" : "x-*prefix=\(.*\)"`
      ;;
    -machine=* | --machine=*)
      MACHINE_SPECIFIED=yes;
      MACHINE=`expr "x$option" : "x-*machine=\(.*\)"`
      ;;
    -target=* | --target=*)
      TARGET=`expr "x$option" : "x-*target=\(.*\)"`
      ;;
    -*)
      opt_error=yes;
      echo "Invalid option: $option" >&2;
      echo "Try ./build_rayleigh --help for usage examples." >&2;
      #{ (exit 1); exit 1; }; }
      ;; 

    esac
done

if [[ $MACHINE_SPECIFIED == "no" && $NEED_HELP == "no" ]]; then
  echo 'Error: must specify a machine name.' >&2;
  echo "Try ./build_rayleigh --help for usage examples." >&2;
  echo $NEED_HELP;
  { ( exit 1); exit 1; };
fi


if [ "$NEED_HELP" == "yes" ]; then
  echo ''
  echo 'Usage: ./build_rayleigh --machine=MACHINE_NAME [ Options ]'
  echo ''
  echo 'Options: '
  echo '  --machine         (REQUIRED) Machine name corresponding to one of the '
  echo '                     machine files in rayleigh/src/Machinefiles'
  echo ''
  echo '  --target          Name of the Rayleigh target to build.  Must correspond'
  echo '                    to one of the targets defined in the machine file.'
  echo '                    default value : all'
  echo ''
  echo '  --prefix          Location in which to place the Rayleigh executables.'
  echo '                    default value : rayleigh/bin'
  echo ''
  echo '  --help            Display this message.'
  echo ''
  echo 'Examples: '
  echo ''
  echo '  (1) build Rayleigh on Pleiades with avx2 optimizations:  
                                 ./build_rayleigh machine=Pleiades target=avx2'
  echo ''
  echo '  (2) build Rayleigh on Pleiades with debugging flags:  
                                 ./build_rayleigh machine=Pleiades target=dbg'
  echo ''
  echo '  (3) build all Rayleigh versions on Mira:  
                                 ./build_rayleigh machine=Mira'
  echo ''
  echo '  (4) build all Rayleigh versions on Mira (alternate method):  
                                 ./build_rayleigh machine=Mira target=all'
  echo ''
  echo '  (5) build all Rayleigh versions on Pleiades; place executable(s) in /scratch/rayleigh_exec:
                                  ./build_rayleigh machine=Mira prefix=/scratch/rayleigh_exec' 
  { ( exit 1); exit 1; };
fi

if [[ $MACHINE_SPECIFIED == "no" && $NEED_HELP=="yes" ]]; then
  { ( exit 1); exit 1; };
fi


########################################################



NOCOMM=machine.no_comments
MACHDEF=Machine_Definitions
BUILDDIR=src/build
if [ ! -e $BUILDDIR ]
then
  mkdir $BUILDDIR
  cd $BUILDDIR
else
  cd $BUILDDIR
  rm -f *.F90
  rm -f Makefile
  rm -f $MACHDEF
  rm -f $NOCOMM
fi

cp ../parallel_framework/*.F90 .
cp ../data_structures/*.F90 .
cp ../math_layer/*.F90 .
cp ../IO/*.F90 .
cp ../test_suite/*.F90 .
cp ../physics/*.F90 .
cp ../Diagnostics/*.F90 .
cp ../Utility/*.F90 .
cp ../Utility/*.c .
cp ../Makefile .
cp ../object_list .

MACHINE_TYPE=Intel
if [ $MACHINE == "Mira" ]
then
  MACHINE_TYPE=IBM
fi

if [ $MACHINE == "Fermi" ]
then
  MACHINE_TYPE=IBM
fi

if [ $MACHINE_TYPE == "IBM" ] 
then
cp ../Utility/MakeDir.F90_IBM MakeDir.F90
# OpenMP-related code.  Not supported presently
# Retained for future use.
#if [ $RAYLEIGH_OPT1 == "omp" ] 
#then
#  echo Builing OpenMP-version-Mira
#  cp ../math_layer/Fourier_Transform.mira_omp Fourier_Transform.F90
#  cp ../math_layer/Chebyshev_Polynomials.mira_omp Chebyshev_Polynomials.F90
#  cp ../parallel_framework/Parallel_Framework.mira_omp Parallel_Framework.F90
#fi
fi

MACHINEFILE=../Machinefiles/machine.${MACHINE}
NOCOMM=machine.no_comments
#First, we strip any user comments out of MACHINEFILE as we copy it to NOCOMM
grep -o '^[^#]*' $MACHINEFILE > $NOCOMM

#Next we copy NOCOMM to MACHDEF, removing trailing whitespace in the process
#  This is super important as errors can arise in the make process otherwise.
sed 's/[ \t]*$//' $NOCOMM > $MACHDEF
echo " "
echo "PREFIX IS: "$PREFIX
mkdir -p $PREFIX
make ${TARGET}  PREFIX=${PREFIX}
